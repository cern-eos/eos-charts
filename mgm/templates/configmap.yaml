apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mgm.fullname" . }}-cfgmap-xrd-cf-mgm
  labels:
    {{- include "mgm.labels" . | nindent 4 }}
data:
  xrd.cf.mgm: |
    ###########################################################
    xrootd.fslib libXrdEosMgm.so
    xrootd.seclib libXrdSec.so
    xrootd.async off nosf
    xrootd.chksum eos
    ###########################################################
    
    xrd.sched mint 8 maxt 256 idle 64
    ###########################################################
    all.export /
    all.role manager
    ###########################################################
    oss.fdlimit 16384 32768
    ###########################################################
    # UNIX authentication
    sec.protocol unix
    # SSS authentication
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    # KRB  authentication
    #sec.protocol krb5 /etc/eos.krb5.keytab host/<host>@TEST.EOS
    # GSI authentication
    #sec.protocol gsi -crl:0 -cert:/etc/grid-security/daemon/hostcert.pem -key:/etc/grid-security/daemon/hostkey.pem -gridmap:/etc/grid-security/grid-mapfile -d:0 -gmapopt:2
    
    ###########################################################
    sec.protbind localhost.localdomain unix sss
    sec.protbind localhost unix sss
    #sec.protbind * only krb5 sss unix
    sec.protbind * only sss unix
    ###########################################################
    mgmofs.instance {{ .Values.mgmofs.instance }}
    mgmofs.fs /
    mgmofs.targetport 1095
    #mgmofs.authlib libXrdAliceTokenAcc.so
    #mgmofs.authorize 1
    ###########################################################
    #mgmofs.trace all debug
    mgmofs.broker root://eos-mq.{{ .Release.Namespace }}.svc.cluster.local:1097//eos/
    
    # configuration and namespace location
    mgmofs.configdir /var/eos/config
    mgmofs.metalog /var/eos/md
    mgmofs.txdir /var/eos/tx
    mgmofs.authdir /var/eos/auth
    # mgmofs.qosdir /var/eos/qos # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)
    
    # QoS configuration file
    # mgmofs.qoscfg /var/eos/qos/qos.conf # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)

    # report store path
    mgmofs.reportstorepath /var/eos/report
    
    # record store is enabled by default
    mgmofs.reportstore true
    
    # record namespace is disabled by default - can be enabled on the fly with the 'io' command
    mgmofs.reportnamespace false
    
    # this defines the default config to load
    mgmofs.autoloadconfig default
    
    # this enables that every change get's immedeatly stored to the active configuration - can be overwritten by EOS_AUTOSAVE_CONFIG defined in /etc/sysconfig/eos
    mgmofs.autosaveconfig true
    
    # this has to be defined if we have a failover configuration via alias - can be overwritten by EOS_MGM_ALIAS in /etc/sysconfig/eos
    #mgmofs.alias eosdev.cern.ch
    
    # Set the number of authentication worker threads running on the mgm
    mgmofs.auththreads 10
    
    # Set the front end port number for incoming authentication requests
    mgmofs.authport 15555
    
    ##### Namespace plugin implementation #####################
    #mgmofs.nslib /usr/lib64/libEosNsInMemory.so
    mgmofs.nslib /usr/lib64/libEosNsQuarkdb.so
    mgmofs.qdbcluster eos-qdb.{{ .Release.Namespace }}.svc.cluster.local:7777
    mgmofs.qdbpassword_file /etc/eos.keytab
    mgmofs.cfgtype quarkdb

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mgm.fullname" . }}-cfgmap-mgm-init
  labels:
    {{- include "mgm.labels" . | nindent 4 }}
data:
  mgm_init.sh: |
    #!/bin/bash
    set -x

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: MGM not reachable after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Start the MGM process in background so that we can run other commands
    echo "INFO: Starting MGM..."
    /usr/bin/xrootd -n mgm -c /etc/xrd.cf.mgm -m -b -Rdaemon >/dev/null 2>&1

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    init_probe eos -r 0 0 ns >/dev/null 2>&1
    echo "INFO: MGM is online."

    # Check if a previous configuration already exists. If so, don't touch.
    echo "INFO: Looking for previous EOS configurations..."
    if [ $(eos -b config ls | grep -w 'enable_sss' | wc -l) -eq 1 ]; then
      echo "  ✓ EOS configurations found. Exiting."
      exit 0
    fi
    echo "  ✓ None found."

    # Enable SSS
    echo "INFO: Enabling mapping via SSS..."
    eos -b vid enable sss

    # Add daemon to sudoers list
    echo "INFO: Adding daemon to sudoers list..."
    eos -b vid set membership daemon +sudo

    ### Save config and leave
    echo "INFO: Saving configuration..."
    eos -b config save enable_sss -f
    eos -b config save default -f
