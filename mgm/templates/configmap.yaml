apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mgm.fullname" . }}-cfgmap-xrd-cf-mgm
  labels:
    {{- include "mgm.labels" . | nindent 4 }}
data:
  xrd.cf.mgm: |
    ###########################################################
    xrootd.fslib libXrdEosMgm.so
    xrootd.seclib libXrdSec.so
    xrootd.async off nosf
    xrootd.chksum eos
    ###########################################################

    xrd.sched mint 8 maxt 256 idle 64
    ###########################################################
    all.export / nolock
    all.role manager
    ###########################################################
    oss.fdlimit 16384 32768
    ###########################################################
    # UNIX authentication
    sec.protocol unix
    # SSS authentication
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    {{- if .Values.kerberos.enabled }}
    # KRB  authentication
    sec.protocol krb5 /etc/eos.krb5.keytab host/<host>@EXAMPLE.COM
    {{- end }}

    # GSI authentication
    #sec.protocol gsi -crl:0 -cert:/etc/grid-security/daemon/hostcert.pem -key:/etc/grid-security/daemon/hostkey.pem -gridmap:/etc/grid-security/grid-mapfile -d:0 -gmapopt:2

    ###########################################################
    sec.protbind localhost.localdomain unix sss
    sec.protbind localhost unix sss
    {{- if .Values.kerberos.enabled }}
    sec.protbind * only krb5 sss unix
    {{- else }}
    sec.protbind * only sss unix
    {{- end }}
    ###########################################################
    mgmofs.instance {{ include "mgm.instancename" . }}
    mgmofs.fs /
    mgmofs.targetport 1095
    #mgmofs.authlib libXrdAliceTokenAcc.so
    #mgmofs.authorize 1
    ###########################################################
    #mgmofs.trace all debug
    mgmofs.broker root://{{ include "utils.mq_hostname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:1097//eos/

    # configuration and namespace location
    mgmofs.configdir /var/eos/config
    mgmofs.metalog /var/eos/md
    mgmofs.txdir /var/eos/tx
    mgmofs.authdir /var/eos/auth
    # mgmofs.qosdir /var/eos/qos # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)

    # QoS configuration file
    # mgmofs.qoscfg /var/eos/qos/qos.conf # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)

    # report store path
    mgmofs.reportstorepath /var/eos/report

    # record store is enabled by default
    mgmofs.reportstore true

    # record namespace is disabled by default - can be enabled on the fly with the 'io' command
    mgmofs.reportnamespace false

    # this defines the default config to load
    mgmofs.autoloadconfig default

    # this enables that every change get's immedeatly stored to the active configuration - can be overwritten by EOS_AUTOSAVE_CONFIG defined in /etc/sysconfig/eos
    mgmofs.autosaveconfig true

    # this has to be defined if we have a failover configuration via alias - can be overwritten by EOS_MGM_ALIAS in /etc/sysconfig/eos
    #mgmofs.alias eosdev.cern.ch

    # Set the number of authentication worker threads running on the mgm
    mgmofs.auththreads 10

    # Set the front end port number for incoming authentication requests
    mgmofs.authport 15555

    ##### Namespace plugin implementation #####################
    #mgmofs.nslib /usr/lib64/libEosNsInMemory.so
    mgmofs.nslib /usr/lib64/libEosNsQuarkdb.so
    mgmofs.qdbcluster {{ include "utils.qdbcluster_hostname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:7777
    mgmofs.qdbpassword_file /etc/eos.keytab
    mgmofs.cfgtype quarkdb

    {{- if eq (include "utils.httpAccess.enabled" .) "true" }}
    ##### Setup HTTP
    http.exthandler EosMgmHttp libEosMgmHttp.so eos::mgm::http::redirect-to-https=0
    http.exthandler xrdtpc libXrdHttpTPC.so
    http.gridmap /etc/grid-security/grid-mapfile
    http.secxtractor libXrdVoms.so
    http.trace all
    all.sitename eosdockertest
    macaroons.secretkey /etc/eos.macaroon.secret
    macaroons.trace all
    mgmofs.macaroonslib libXrdMacaroons.so
    xrd.protocol XrdHttp:8443 libXrdHttp.so
    xrd.sched mint 64 maxt 2048 idle 300
    xrd.timeout idle 86400
    xrd.tlsca certdir /etc/grid-security/certificates/
    xrd.tls /etc/grid-security/daemon/hostcert.pem /etc/grid-security/daemon/hostkey.pem
    {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mgm.fullname" . }}-cfgmap-mgm-init
  labels:
    {{- include "mgm.labels" . | nindent 4 }}
data:
  mgm_init.sh: |
    #!/bin/bash
    set -x

    init_probe() {
      local cmd=$@
      local max_wait=180
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Check QDB backend is running
    echo "INFO: Checking QDB is running..."
    init_probe redis-cli -h {{ include "utils.qdbcluster_hostname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }} -p 7777 ping
    echo "INFO: QDB is online."

    # If HTTP support is enabled but certs are not provided, generate a host certificate (development image only)
    {{- if and (eq (include "utils.httpAccess.enabled" .) "true") (not .Values.global.hostCertSecretName) }}
    echo "INFO: Generating host certificate..."
    ./mkcert-ssl.sh
    {{- end }}

    # Start the MGM process in background so that we can run other commands
    echo "INFO: Starting MGM..."
    /opt/eos/xrootd/bin/xrootd -n mgm -c /etc/xrd.cf.mgm -m -b -Rdaemon >/dev/null 2>&1

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos -r 0 0 ns
    echo "INFO: MGM is online."

    # Check if a previous configuration already exists. If so, don't touch.
    echo "INFO: Looking for previous EOS configurations..."
    if [ $(eos -b config ls | grep -w 'enable_sss' | wc -l) -eq 1 ]; then
      echo "  ✓ EOS configurations found. Exiting."
      exit 0
    fi
    echo "  ✓ None found."

    # Enable SSS
    echo "INFO: Enabling mapping via SSS..."
    eos -b vid enable sss
    {{- if .Values.kerberos.enabled }}
    eos -b vid enable krb5
    {{- end }}


    # Add daemon to sudoers list
    echo "INFO: Adding daemon to sudoers list..."
    eos -b vid set membership daemon +sudo

    ### Save config and leave
    echo "INFO: Saving configuration..."
    eos -b config save enable_sss -f
    eos -b config save default -f


---
{{- if eq ( include "podSharing.mgmMq" . ) "true" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mq.fullname" . }}-cfgmap-xrd-cf-mq
  labels:
    {{- include "mq.labels" . | nindent 4 }}
data:
  xrd.cf.mq: |
    ##### Broker OFS ##########################################
    xrootd.fslib libXrdMqOfs.so
    all.export /eos/ nolock
    all.role server
    xrootd.async off nosf

    ##### SSS authentication ##################################
    xrootd.seclib libXrdSec.so
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    sec.protbind * only sss

    ##### Allow up to 1024 threads ############################
    xrd.sched mint 16 maxt 1024 idle 128

    ##### Run on port 1097 ####################################
    xrd.port 1097

    ##### Keep-alive + idle timeout ###########################
    xrd.network keepalive
    xrd.timeout idle 120

    ##### Queueing ############################################
    mq.maxmessagebacklog 100000
    mq.maxqueuebacklog 50000
    mq.rejectqueuebacklog 100000

    ##### Trace levels (low|medium|high) ######################
    mq.trace low

    ###########################################################
    mq.queue /eos/

    ##### QuarkDB #############################################
    mq.qdbcluster {{ include "utils.qdbcluster_hostname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:7777
    mq.qdbpassword_file /etc/eos.keytab
    ###########################################################
{{- end }}
