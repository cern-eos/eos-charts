apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mgm.fullname" . }}
  labels:
    {{- include "mgm.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mgm.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mgm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mgm.selectorLabels" . | nindent 8 }}
    spec:
      # TODO: Create an init container that:
      # 1. Start the xroot daemon as MGM
      # 2. Cofnigures basic authentication via SSS
      # 3. Saves the config
      # 4. Exits
      # Such init container shares the /var/eos directory such that the main xrootd daemon in the main container will read from there and load the pre-configured SSS authentication
      containers:
        - name: eos-mgm
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - sleep infinity;
          ports:
            - name: xrootd-mgm
              containerPort: 1094
              protocol: TCP
            - name: xrootd-sync
              containerPort: 1096
              protocol: TCP
            - name: xrootd-http
              containerPort: 8000
              protocol: TCP
            - name: fusex
              containerPort: 1100
              protocol: TCP
          env:
            # leave it aside until the qdb chart is done
            # - name: EOS_QUARKDB_HOSTPORT
            #   value: "eos-qdb.eos-qdb.%%%NAMESPACE%%%.svc.cluster.local:7777"
            # Inspiration from cockroachdb, in case we need it:
            # - name: STATEFULSET_NAME
            #   value: {{ template "mgm.fullname" . }}
            # - name: STATEFULSET_FQDN
            #   value: {{ template "mgm.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
            ### work around current Kubernetes setup issues. This should *NOT* be enabled in production
          envFrom:
            - configMapRef:
                name: {{ include "mgm.fullname" . }}-cfgmap-sysconfig-eos
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              add: ["SYS_PTRACE"]
          # startupProbe when deployed on kubectl >= 1.16
          # exec:
          #   command:
          #   - /volumes/configmap/configure.sh
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          {{- include "mgm.startupProbe" . | nindent 10 }}
          volumeMounts:
            - name: mgm-cfgmap-xrd-cf-mgm
              mountPath: /etc/xrd.cf.mgm
              subPath: xrd.cf.mgm
            - name: mgm-data
              # TODO: to be verified
              # TODO: Not sure if we have to pre-create directories there
              mountPath: /var/eos
            - name: mgm-logs
              mountPath: /var/log/eos
      volumes:
        - name: mgm-cfgmap-xrd-cf-mgm
          configMap:
            name: {{ include "mgm.fullname" . }}-cfgmap-xrd-cf-mgm
            defaultMode: 0755
        - name: mgm-data
          hostPath:
            path: /var/k8s/data/{{ include "mgm.name" . }}-data
            type: DirectoryOrCreate
        - name: mgm-logs
          emptyDir: {}
