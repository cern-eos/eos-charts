image:
  repository: gitlab-registry.cern.ch/dss/eos
  tag: 4.8.39
  pullPolicy: Always

#
# Assign mgm pod to a node with a specific label.
# If true, requires a node labeled as per customLabels (see below).
#
podAssignment:
  enableNodeSelector: false

#
# Custom labels to identify eos mgm pod.
#
# They are used by node selection, if enabled (see above).
# Label nodes accordingly to avoid scheduling problems.
#
customLabels:
  service: eos
  component: eos-mgm

#
# Network configuration.
#
# hostNetwork allows the pod to use the host network namespace.
#   Available options: true, false
#   Default: false
#
hostNetwork: false
#
# dnsPolicy regulates how the pod resolves hostnames with DNS servers.
#   In case hostNetwork is set to true, dnsPolicy must be ClusterFirstWithHostNet
#   Documentation: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
#   Available options: Default, ClusterFirst, ClusterFirstWithHostNet, None
#   Default: ClusterFirst
#
dnsPolicy: ClusterFirst
#
# Service ports declaration for mgm.
# These are the ports exposed by the Kubernetes service.
#
# Defaults:
#   - xrootd_mgm:  1094
#   - xrootd_sync: 1096
#   - xrootd_http: 8000
#   - fusex:       1100
#
# Values can be overridden with:
# - .Values.ports.{xrootd_mgm, xrootd_sync, xrootd_http, fusex} below
# - Global .Values.global.ports.<service_name> in a parent chart.
#     Global takes precedence over local values.
#
ports:
  xrootd_mgm:
  xrootd_sync:
  xrootd_http:
  fusex:

#
# Short hostnames of the components to be reached from the mgm.
# The corresponding FQDNs are generated appending the namespace and '.svc.cluster.local'.
#
# These values depend on the Helm release name given to each component.
# Leave them blank to let Helm infer the names automatically according to .Release.Name
#
# Values can be overridden with:
# - .Values.hostnames.{mq, qdbcluster} below
# - Global .Values.global.hostnames.{mq, qdbcluster} in a parent chart.
#     Global takes precedence over local values.
#
hostnames:
  # Hostname of the mq (aka, broker).
  mq: ""
  # Hostname of the quarkdb cluster.
  qdbcluster: ""

#
# mgm configuration
#
mgmofs:
  # Name of the eos instance.
  # Will create the directory tree `/eos/<instance>`.
  #
  # Defaults to 'eosdockertest' if not set.
  # Can be overriden by .Values.global.eos.instancename
  instance: ""

#
# Manage persistence of data stored in MGM.
#
# If persistence is not enabled, data stored in MGM will not survive the restart of pods.
# It is recommended to configure persistence according to the hosting infrastrcuture.
#
# The following type of persistence are supported:
# - disabled:
#     No persistence provided. Data is stored in 'emptyDir'
#
# - hostpath:
#     Persistence provided by mounting a directory from the host filesystem.
#     Docs: https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
#     Additional parameters:
#     - path: Directory location on host (defaults to /var/eos/<mgm.fullname>)
#     - type: Type of mount (defaults to DirectoryOrCreate)
#
# - pvc:
#     Persistence provided by mounting a persistent volume.
#     Requires the availability of such feature on the hosting infrastructure.
#     Docs: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
#     Additional parameters:
#     - storageClass: If set to "-", disable dynamic provisioning.
#                     If undefined or null, the default provisioner is chosen.
#     - accessModes: How to access the pvc (ReadWriteOnce, ReadOnlyMany, ReadWriteMany)
#     - size: Size of the pvs (example, 10Gi)
#     - annotations: Custom annotations on the pvc, in key:value format
#
# The persistence type can be overriden via .Values.global.eos.persistence.type.
#
persistence:
  type: disabled
  #
  #type: hostpath
  #hostPath:
  #  path: ""
  #  type: ""
  #
  #type: pvc
  #pvc:
  #  storageClass: ""
  #  accessModes:
  #    - ReadWriteOnce
  #  size: 10Gi
  #  annotations: {}

#
# Enable or disable health probes for mgm.
#   Docs: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
#
# Startup Probe:
#   Checks whether it is possible to open a TCP socket againsts port 1094.
#   Allows for a startup delay of 120 seconds (10s period * 12 failureThreshold)
#
# Liveness Probe:
#   Checks every 10 seconds whether it is possible to open a TCP socket againsts port 1094.
#   The mgm container will be restarted after 3 failures.
#
# Readiness Probe:
#   Checks every 10 seconds whether `eos ns` returns successfully.
#   If not, the failing pod will be removed from the alias
#     (which is not that useful because we have no slave at the moment)
#
# # Default: All probes enabled.
#   This can be overridden with:
#   - .Values.probes.{startup, liveness, readiness} below
#   - Global .Values.global.probes.mgm_{startup, liveness} in a parent chart.
#       Global takes precedence over local values.
#
probes:
  startup: true
  liveness: true
  readiness: true

ldapBindUsers:
  enable: false
  #enable: true
  #nscd:
  #  image:
  #    repository: gitlab-registry.cern.ch/sciencebox/docker-images/nscd
  #    tag: stable
  #nslcd:
  #  image:
  #    repository: gitlab-registry.cern.ch/sciencebox/docker-images/nslcd
  #    tag: stable
  #  config:
  #    ldap_uri: ldap://my-ldap-server:12345
  #    ldap_base: dc=example,dc=org
  #    ldap_binddn: cn=admin,dc=example,dc=org
  #    ldap_bindpw: admin
  #    ldap_user_search_base: dc=example,dc=org
  #    ldap_group_search_base: ou=groups,dc=example,dc=org
  #    ldap_filter_passwd: (objectClass=posixAccount)
  #    ldap_filter_group: (objectClass=group)

# keytab:
#   name: default-keytab
