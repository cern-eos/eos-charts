apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "qdb.fullname" . }}
  labels:
    {{- include "qdb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "qdb.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "qdb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "qdb.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.customLabels | nindent 8 }}
    spec:
      hostNetwork: {{ default false .Values.hostNetwork }}
      dnsPolicy: {{ default "ClusterFirst" .Values.dnsPolicy }}
      {{- if .Values.podAssignment.enableNodeSelector }}
      nodeSelector:
        {{- toYaml .Values.customLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.podAssignment.enablePodAntiAffinity }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              {{- range $key, $val := .Values.customLabels }}
              - key: {{ $key }}
                operator: In
                values:
                - {{ $val }}
              {{- end }}
            topologyKey: "kubernetes.io/hostname"
      {{- end }}
      initContainers:
        # Required until https://github.com/kubernetes/kubernetes/issues/81089 is merged
        - name: eos-qdb-init0-sss-keytab-ownership
          image: {{ include "utils.image" . }}
          imagePullPolicy: {{ include "utils.imagePullPolicy" . }}
          command: ["/bin/bash", "-c"]
          args: ["cp /root/sss_keytab/input/eos.keytab /root/sss_keytab/output/eos.keytab; chown daemon:daemon /root/sss_keytab/output/eos.keytab; chmod 400 /root/sss_keytab/output/eos.keytab"]
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /root/sss_keytab/input/eos.keytab
              subPath: eos.keytab
            - name: eos-sss-keytab-fixedownership
              mountPath: /root/sss_keytab/output
        - name: eos-qdb-init1-quarkdb-create
          image: {{ include "utils.image" . }}
          imagePullPolicy: {{ include "utils.imagePullPolicy" . }}
          command: ["/bin/bash", "/root/qdb_create.sh"]
          volumeMounts:
            - name: quarkdb-data
              mountPath: /var/quarkdb   # `quarkdb-create` fails if the folder already exists, hence we mount the parent.
            - name: quarkdb-cfgmap-qdb-create
              mountPath: /root/qdb_create.sh
              subPath: qdb_create.sh
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-partial
              mountPath: /root/qdb-config/input/xrd.cf.quarkdb.partial
              subPath: xrd.cf.quarkdb.partial
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
              mountPath: /root/qdb-config/output
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
      containers:
        - name: eos-qdb
          image: {{ include "utils.image" . }}
          imagePullPolicy: {{ include "utils.imagePullPolicy" . }}
          command: ["/bin/sh", "-c"]
          args: ["/opt/eos/xrootd/bin/xrootd -n qdb -c /etc/xrd.cf.quarkdb -l /var/log/eos/xrdlog.qdb -Rdaemon"]
          env:
            # work around current Kubernetes setup issues. This should *NOT* be enabled in production
            - name: EOS_SKIP_SSS_HOSTNAME_MATCH
              value: "true"
            - name: LD_PRELOAD
              value: "/usr/lib64/libjemalloc.so.1"
            {{- with .Values.extraEnv }}
            {{- include "utils.extraEnv" . | nindent 12 }}
            {{- end }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          {{- include "qdb.livenessProbe" . | nindent 10 }}
          {{- include "qdb.readinessProbe" . | nindent 10 }}
          volumeMounts:
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
              mountPath: /etc/xrd.cf.quarkdb
              subPath: xrd.cf.quarkdb
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: quarkdb-data
              mountPath: /var/quarkdb
            - name: quarkdb-logs
              mountPath: /var/log/eos
      volumes:
        - name: quarkdb-cfgmap-qdb-create
          configMap:
            name: {{ include "qdb.fullname" . }}-cfgmap-qdb-create
            defaultMode: 0755
        - name: quarkdb-cfgmap-xrd-cf-quarkdb-partial
          configMap:
            name: {{ include "qdb.fullname" . }}-xrd-cf-quarkdb-partial
        - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
          emptyDir: {}
        - name: eos-sss-keytab
          secret:
            secretName: {{ include "utils.sssKeytabName" . }}
            defaultMode: 0400
        - name: eos-sss-keytab-fixedownership
          emptyDir: {}
        - name: quarkdb-logs
          emptyDir: {}
  {{- if eq (include "utils.persistence" . ) "false" }}
        - name: quarkdb-data
          emptyDir: {} 
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: quarkdb-data
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.pvc.storageClass }}"
        {{- end }}
        {{- end }}        
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}