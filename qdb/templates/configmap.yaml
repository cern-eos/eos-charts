apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "qdb.fullname" . }}-xrd-cf-quarkdb-partial
  labels:
    {{- include "qdb.labels" . | nindent 4 }}
data:
  xrd.cf.quarkdb.partial: |
    if exec xrootd
      xrd.port 7777
      xrd.protocol redis:7777 /usr/lib64/libXrdQuarkDB.so
      redis.password_file /etc/eos.keytab
      #redis.database#to_be_configured
      #redis.mode#to_be_configured
    fi


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "qdb.fullname" . }}-cfgmap-qdb-create
  labels:
    {{- include "qdb.labels" . | nindent 4 }}
data:
  qdb_create.sh: |
    #!/bin/bash
    set -x

    #### @note Until https://github.com/kubernetes/kubernetes/issues/81089 is merged
    echo "INFO: making /etc/eos.keytab 0400 and owned by daemon:daemon ..."
    cp /etc/eos.keytab.ro /etc/eos.keytab || exit 1
    chown daemon:daemon /etc/eos.keytab || exit 1
    chmod 0400 /etc/eos.keytab || exit 1
    echo "INFO: /etc/eos.keytab is 0400 and owned by daemon:daemon"
    #### @note Until https://github.com/kubernetes/kubernetes/issues/81089 is merged

    # Number of replicas of QuarkDB
    #   Determines whether it should run in stanalone mode or as part of a raft cluster.
    #   This is set by Helm in values.yaml
    REPLICA_COUNT={{ .Values.replicaCount }}
    echo "INFO: Number of desired replicas is $REPLICA_COUNT"

    if [ $REPLICA_COUNT -eq 2 ]; then
      echo "ERROR: Cannot start QaurkDB with two replicas. Please choose 1 for standalone or 3+ for raft cluster".
      exit 1
    fi

    if [ $REPLICA_COUNT -eq 1 ]; then
      echo "INFO: Initializing QuarkDB in standalone mode"
      STORAGE_PATH='/var/quarkdb/node-0'
      if [ ! -d "$STORAGE_PATH" ]; then
        # Prepare configuration file
        #   This is not used by quarkdb-create, but will be needed at runtime
        cat /root/qdb-config/input/xrd.cf.quarkdb.partial | \
          sed 's@#redis.mode#to_be_configured@redis.mode standalone@' | \
          sed "s@#redis.database#to_be_configured@redis.database $STORAGE_PATH@" > /root/qdb-config/output/xrd.cf.quarkdb
        # Create QuarkDB in standalone mode
        quarkdb-create --path $STORAGE_PATH
        chown -R daemon:daemon $STORAGE_PATH
      fi
    fi
    if [ $REPLICA_COUNT -ge 3 ]; then
      echo "INFO: Initializing QuarkDB in raft cluster mode ($REPLICA_COUNT nodes)"

      # Cluster ID of QuarkDB (used only in raft mode)
      #   This is set by Helm in values.yaml
      #   Docs: https://quarkdb.web.cern.ch/quarkdb/docs/master/configuration/
      CLUSTER_ID={{ .Values.clusterID }}

      THIS_FQDN=$(hostname -f)
      echo "INFO: My FQDN is $THIS_FQDN"

      # Infer the replica number of this container
      #   This is based on the last field of the hostname being the ordinal for this container
      #   (`hostname -s` and split using '-' as delimiter)
      #   Docs: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#stable-network-id
      THIS_REPLICA=$(hostname -s | rev | cut -d '-' -f 1 | rev)
      echo "INFO: I am replica no. $THIS_REPLICA"

      # Create the cluster in raft mode
      #   1. Define storage path
      PATH_PREFIX="/var/quarkdb/node-"
      STORAGE_PATH="$PATH_PREFIX$THIS_REPLICA"
      echo "INFO: My storage path is $STORAGE_PATH"

      # 2. Prepare configuration file
      #   This is not used by quarkdb-create, but will be needed at runtime
      cat /root/qdb-config/input/xrd.cf.quarkdb.partial | \
        sed "s@#redis.mode#to_be_configured@redis.mode raft\n  redis.myself `hostname -f`:7777@g" | \
        sed "s@#redis.database#to_be_configured@redis.database $STORAGE_PATH@" > /root/qdb-config/output/xrd.cf.quarkdb

      # 3. Define cluster peers
      NODES=""
      for i in $(seq 0 $((REPLICA_COUNT-1)))
      do
        PEER=$(echo $THIS_FQDN | sed "s@-$THIS_REPLICA.@-$i.@")
        NODES=$(echo $NODES,$PEER:7777)
      done
      NODES=$(echo $NODES | cut -c 2-)  # Trim the leading comma

      # 4. Create the cluster
      quarkdb-create --path $STORAGE_PATH --clusterID $CLUSTER_ID --nodes $NODES
      chown -R daemon:daemon $STORAGE_PATH
    fi

    echo "INFO: Printing QuarkDB configuration from /etc/xrd.cf.quarkdb"
    cat /root/qdb-config/output/xrd.cf.quarkdb
    exit 0
