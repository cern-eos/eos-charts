apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fst.fullname" . }}-cfgmap-fst-init
  labels:
    {{- include "fst.labels" . | nindent 4 }}
data:
  fst_init.sh: |
    #!/bin/bash
    set -x
    shopt -s expand_aliases
    alias eos='eos -r 0 0'

    init_probe() {
      local cmd=$@
      local max_wait=180
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: MGM not reachable after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }


    # Check the MGM is online before registering the node and the filesystem
    echo "INFO: Checking the MGM is online..."
    init_probe eos ns >/dev/null 2>&1
    echo "INFO: MGM is online."

    # Start the FST process in background so that we can run other commands
    echo "INFO: Starting FST..."
    /usr/bin/xrootd -n fst -c /etc/xrd.cf.fst -m -b -Rdaemon >/dev/null 2>&1

    # Local variables
    DATADIR=/fst_storage
    UUID=$(uuidgen)
    HOSTNAME=$(hostname -f)
    SPACE={{ default "default" .Values.selfRegister.space }}
    CONFIG={{ default "rw" .Values.selfRegister.config }}

    # If there is an eos fsid || fsuuid, bail out
    if [ -f $DATADIR/.eosfsid ] || [ -f $DATADIR/.eosfsuuid ]; then
      echo "INFO: FS IDs already exist. Not cofiguring any further"
      echo "INFO: FS uuid is "$(cat $DATADIR/.eosfsuuid)
      exit 0
    fi

    # Write filesystem identifier
    echo "INFO: FS uuid is $UUID"
    echo "$UUID" > $DATADIR/.eosfsuuid

    # If needed, create the EOS space
    if [ $(eos space ls $SPACE -m | wc -l) -eq 0 ]; then
      echo "INFO: Space $SPACE does not exist. Creating..."
      eos space define $SPACE
      #eos space set $SPACE on
    fi
    eos space set $SPACE on

    # Set this node on
    echo "INFO: Enabling node..."
    eos node set $HOSTNAME:1095 on

    # Register filesystem
    echo "INFO: Registering filesystem..."
    eos fs add $UUID $HOSTNAME:1095 $DATADIR $SPACE $CONFIG

    exit 0
