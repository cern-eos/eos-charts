apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fst.fullname" . }}-cfgmap-xrd-cf-fst
  labels:
    {{- include "fst.labels" . | nindent 4 }}
data:
  xrd.cf.fst: |
    ###########################################################
    xrootd.fslib -2 libXrdEosFst.so
    xrootd.async off nosf
    xrd.network keepalive
    ###########################################################
    xrootd.seclib libXrdSec.so
    sec.protocol unix
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    sec.protbind * only unix sss
    ###########################################################
    all.export / nolock
    all.trace none
    all.manager localhost 2131
    #ofs.trace open
    ###########################################################
    xrd.port 1095
    ofs.persist off
    ofs.osslib libEosFstOss.so
    ofs.tpc pgm /usr/bin/xrdcp
    ###########################################################
    fstofs.autoboot true
    fstofs.quotainterval 10
    fstofs.metalog /var/eos/md/
    fstofs.fmddict /var/eos/md/fstfmd.dict
    ##### QuarkDB #############################################
    fstofs.qdbcluster eos-qdb-0.eos-qdb.{{ .Release.Namespace }}.svc.cluster.local:7777
    fstofs.qdbpassword_file /etc/eos.keytab
    ###########################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fst.fullname" . }}-cfgmap-fst-init
  labels:
    {{- include "fst.labels" . | nindent 4 }}
data:
  fst_init.sh: |
    #!/bin/bash
    set -x

    handle_exit_condition () {
      local rc=$1
      local text=$2

      if [ $rc -ne 0 ]; then
        echo "  ✗ $text. Aborting."
        exit 1
      else
        echo "  ✓ Success!"
      fi
    }


    # TODO: Improve logging
    # TODO: Improve checks

    # TODO: Meta info such
    #   - space
    #   - config (rw//ro)
    #   - geotag
    #   should all be values and not hardcoded

    # Start the FST process in background so that we can run other commands
    echo "INFO: Starting FST..."
    /usr/bin/xrootd -n fst -c /etc/xrd.cf.fst -m -b -Rdaemon >/dev/null 2>&1

    # Check the MGM is online before registering the node and the filesystem
    echo "INFO: Checking the MGM is online..."
    max_wait=60
    sleep=5
    start_time=$(date +%s)
    rc=-1
    while [ $rc -ne 0 ];
    do
      timeout --preserve-status $sleep eos -r 0 0 -b ns >/dev/null 2>&1
      rc=$?
      sleep $sleep

      # Bail out after max_wait
      tot_wait=$(($(date +%s)-start_time))
      echo "        $tot_wait seconds... (timeout at $max_wait)"
      if [ $tot_wait -ge $max_wait ]; then
        echo "ERROR: MGM not reachable after $tot_wait secs. Giving up."
        exit 1
      fi
    done
    echo "INFO: MGM is online."


    # TODO: Improve here!!!
    # @note $id is commodity used in the legacy script, 
    # but one does not actually need an ordered sequence of ids (let alone it being the same for every fst)
    # UUID=$(uuidgen) would be enough, but maybe unpractical? Take a decision.
    id=$((1 + $RANDOM % 1000))
    UUID=fst${id}
    DATADIR=/fst_storage
    SPACE=default
    CONFIG=rw

    # If there is an eos fsid || fsuuid, bail out
    if [ -f $DATADIR/.eosfsid ] || [ -f $DATADIR/.eosfsuuid ]; then
      echo "FS IDs already exist. Not cofiguring any further"
      exit 0
    fi

    ### Configure filesystem identifiers
    echo "$UUID" > $DATADIR/.eosfsuuid
    echo "${id}" > $DATADIR/.eosfsid

    ### Register space (!! THIS IS A BUG !!)
    # TODO: BUG!
    eos -r 0 0 -b space define default
    # TODO: BUG!

    ### Set this node to on
    eos -r 0 0 -b node set `hostname -f`:1095 on

    ### Register filesystem
    eos -r 0 0 -b fs add -m ${id} $UUID `hostname -f`:1095 $DATADIR default $CONFIG
    # eos -r 0 0 -b fs boot ${id} # TODO: Check -- Does not seem to be needed

    ### Activate space (!! THIS IS A BUG !!)
    # The file system will stay `offline` if the space is not set to on after the FS gets registered
    # TODO: BUG!
    eos -r 0 0 -b space set default on
    # TODO: BUG!

    exit 0
