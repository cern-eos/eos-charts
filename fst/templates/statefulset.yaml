apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fst.fullname" . }}
  labels:
    {{- include "fst.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "fst.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fst.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fst.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.customLabels | nindent 8 }}
    spec:
      hostNetwork: {{ default false .Values.hostNetwork }}
      dnsPolicy: {{ default "ClusterFirst" .Values.dnsPolicy }}
      {{- if .Values.podAssignment.enableNodeSelector }}
      nodeSelector:
        {{- toYaml .Values.customLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.podAssignment.enablePodAntiAffinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                {{- range $key, $val := .Values.customLabels }}
                - key: {{ $key }}
                  operator: In
                  values:
                  - {{ $val }}
                {{- end }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      initContainers:
        - name: eos-fst-init0-chown-storage
          image: "{{ include "eos.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: ["chown daemon:daemon /fst_storage"]
          volumeMounts:
            - name: fst-storage
              mountPath: /fst_storage
        {{- if .Values.selfRegister }}
        {{- if .Values.selfRegister.enable }}
        - name: eos-fst-init1-fst-init
          image: "{{ include "eos.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: EOS_MGM_URL
              value: root://{{ include "mgm.fqdn" . }}
          envFrom:
            - configMapRef:
                name: {{ include "fst.fullname" . }}-cfgmap-sysconfig-eos
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              add: ["SYS_PTRACE"]
          command: ["/bin/bash", "/root/fst_init.sh"]
          volumeMounts:
            - name: k8svol
              mountPath: /k8svol
            - name: fst-cfgmap-xrd-cf-fst
              mountPath: /etc/xrd.cf.fst
              subPath: xrd.cf.fst
            - name: fst-storage
              mountPath: /fst_storage
            - name: fst-cfgmap-fst-init
              mountPath: /root/fst_init.sh
              subPath: fst_init.sh
        {{- end }}
        {{- end }}
            - name: eos-sss-keytab
              mountPath: /k8svol/etc/eos.keytab.ro
              subPath: eos.keytab.ro
      containers:
        - name: eos-fst
          image: "{{ include "eos.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: ["/usr/bin/xrootd -n fst -c /etc/xrd.cf.fst -l /var/log/eos/xrdlog.fst -Rdaemon"]
          env:
            # Inspiration from cockroachdb, in case we need it:
            # - name: STATEFULSET_NAME
            #   value: {{ template "fst.fullname" . }}
            # - name: STATEFULSET_FQDN
            #   value: {{ template "fst.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
            ### work around current Kubernetes setup issues. This should *NOT* be enabled in production
            - name: EOS_MGM_URL
              value: root://{{ include "mgm.fqdn" . }}
          envFrom:
            - configMapRef:
                name: {{ include "fst.fullname" . }}-cfgmap-sysconfig-eos
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              add: ["SYS_PTRACE"]
          {{- include "fst.livenessProbe" . | nindent 10 }}
          volumeMounts:
            - name: k8svol
              mountPath: /k8svol
            - name: fst-cfgmap-xrd-cf-fst
              mountPath: /etc/xrd.cf.fst
              subPath: xrd.cf.fst
            ## TODO: What about the data at /var/eos/md/... ?
            ##   Should this be persisted?
            ## - name: fst-data
            ##   mountPath: /var/eos
            - name: fst-storage
              mountPath: /fst_storage
            - name: fst-logs
              mountPath: /var/log/eos
            - name: eos-sss-keytab
              mountPath: /k8svol/etc/eos.keytab.ro
              subPath: eos.keytab.ro
      volumes:
        - name: k8svol
          emptyDir: {}
        - name: fst-cfgmap-xrd-cf-fst
          configMap:
            name: {{ include "fst.fullname" . }}-cfgmap-xrd-cf-fst
            defaultMode: 0755
        - name: fst-cfgmap-fst-init
          configMap:
            name: {{ include "fst.fullname" . }}-cfgmap-fst-init
            defaultMode: 0755
        - name: fst-logs
          emptyDir: {}
        - name: eos-sss-keytab
          secret:
            secretName: {{ include "utils.sssKeytabName" . }}
            defaultMode: 0400
{{- if eq ( include "persistence" . ) "disabled" }}
        - name: fst-storage
          emptyDir: {}
{{- end }}
{{- if eq ( include "persistence" . ) "hostpath" }}
        - name: fst-storage
          hostPath:
            path: {{ dig "hostPath" "path" (printf "/var/eos/%s" (include "fst.fullname" . )) .Values.persistence }}
            type: {{ dig "hostPath" "type" "DirectoryOrCreate" .Values.persistence }}
{{- end }}
{{- if eq ( include "persistence" . ) "pvc" }}
  volumeClaimTemplates:
    - metadata:
        name: fst-storage
        {{- if .Values.persistence.pvc.annotations }}
        annotations:
          {{- toYaml .Values.persistence.pvc.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.persistence.pvc.storageClass }}
        {{- if (eq "-" .Values.persistence.pvc.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.pvc.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{- toYaml .Values.persistence.pvc.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.persistence.pvc.size }}"
{{- end }}
