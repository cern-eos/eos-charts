apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fst.fullname" . }}
  labels:
    {{- include "fst.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fst.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fst.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - sleep infinity;
          ports:
            - name: fst
              containerPort: 1095
              protocol: TCP
            - name: microhttp
              containerPort: 8001
              protocol: TCP
          env:
            # Let the container know where is it running
            # - name: PODINFO_NAME
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: metadata.name
            # - name: PODINFO_NAMESPACE
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: metadata.namespace
            # - name: PODINFO_IP
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: status.podIP
            # - name: PODINFO_NODE_IP
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: status.hostIP
            # - name: PODINFO_NODE_NAME
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: spec.nodeName
            ### work around current Kubernetes setup issues. This should *NOT* be enabled in production
              - name: EOS_SKIP_SSS_HOSTNAME_MATCH
                value: "true"
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              add: ["SYS_PTRACE"]
          # startupProbe when deployed on kubectl >= 1.16
          # exec:
          #   command:
          #   - /volumes/configmap/configure.sh
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            - name: configmap-volume
              mountPath: /volumes/configmap/configure.sh
              subPath: configure.sh
      volumes:
        - name: configmap-volume
          configMap:
            name: {{ include "fst.fullname" . }}-config
            defaultMode: 0755
