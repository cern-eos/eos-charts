apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fusex.fullname" . }}-cfgmap-fuse-conf
  labels:
    {{- include "fusex.labels" . | nindent 4 }}
data:
  #
  # Helm interprets a value set to 0 as null and hence uses the default
  # This is buggy for us as it does not allow to override a 1 default with a 0.
  #
  # Here we check if the type of the values is int64 and, if so, we use it instead of the default.
  # Upstream tracker: https://github.com/helm/helm/issues/3164
  #
  fuse.eos.conf: |
    {{- with .Values.fusex.config }}
    {
      "name": "eos",
      "hostport": "{{ .eos_mgm_alias }}",
      "remotemountdir": "{{ .remotemountdir }}",
      "localmountdir": "/eos",
      "auth": {
        "shared-mount": {{ if kindIs "int64" .auth.shared_mount }}{{ .auth.shared_mount }}{{ else }}1{{ end }},
        "sss": {{ if kindIs "int64" .auth.sss }}{{ .auth.sss }}{{ else }}1{{ end }},
        "ssskeytab": "/etc/eos.keytab",
        "gsi-first": {{ if kindIs "int64" .auth.gsi_first }}{{ .auth.gsi_first }}{{ else }}0{{ end }},
        "krb5": {{ if kindIs "int64" .auth.krb5 }}{{ .auth.krb5 }}{{ else }}0{{ end }},
        "oauth2": {{ if kindIs "int64" .auth.oauth2 }}{{ .auth.oauth2 }}{{ else }}1{{ end }}
      },
      "options": {
        "hide-versions": {{ if kindIs "int64" .options.hide_versions }}{{ .options.hide_versions }}{{ else }}0{{ end }}
      }
    }
    {{- end }}


{{- if .Values.checkMgmOnline.enabled -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fusex.fullname" . }}-cfgmap-fusex-waitformgm
  labels:
    {{- include "fusex.labels" . | nindent 4 }}
data:
  fusex_waitformgm.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos ns
    echo "INFO: MGM is online."
{{- end }}
